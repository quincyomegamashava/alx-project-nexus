name: 🚀 Deploy Project Nexus

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  # Test and Build
  test:
    name: 🧪 Test & Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [frontend, mobile, api]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '${{ matrix.app }}/package-lock.json'

      - name: 📋 Install dependencies
        working-directory: ./${{ matrix.app }}
        run: npm ci

      - name: 🔍 Run linting
        working-directory: ./${{ matrix.app }}
        run: npm run lint || echo "Linting not configured"
        continue-on-error: true

      - name: 🧪 Run tests
        working-directory: ./${{ matrix.app }}
        run: npm test || echo "Tests not configured"
        continue-on-error: true

  # Deploy Backend API
  deploy-api:
    name: 🗄️ Deploy API to Railway
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚂 Deploy to Railway
        uses: railwayapp/railway-action@v2
        with:
          api-key: ${{ secrets.RAILWAY_TOKEN }}
          railway-project-id: ${{ secrets.RAILWAY_PROJECT_ID }}
          railway-service: api
        env:
          RAILWAY_ENVIRONMENT: production

  # Deploy Frontend to Vercel
  deploy-frontend:
    name: 🌐 Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Deploy to Vercel
        uses: vercel/action@v1
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend

  # Build Mobile App
  deploy-mobile:
    name: 📱 Build Mobile App
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 🥡 Setup Expo CLI
        run: npm install -g @expo/cli

      - name: 📋 Install dependencies
        working-directory: ./mobile
        run: npm ci

      - name: 🔧 Setup EAS CLI
        run: npm install -g eas-cli

      - name: 🏗️ Build with EAS
        working-directory: ./mobile
        run: |
          echo ${{ secrets.EXPO_TOKEN }} | eas login --non-interactive
          eas build --platform android --profile preview --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

  # Notification
  notify:
    name: 📢 Deployment Notification
    runs-on: ubuntu-latest
    needs: [deploy-api, deploy-frontend, deploy-mobile]
    if: always()
    steps:
      - name: 🎉 Success Notification
        if: needs.deploy-api.result == 'success' && needs.deploy-frontend.result == 'success'
        run: |
          echo "🎉 Deployment successful!"
          echo "✅ API deployed to Railway"
          echo "✅ Frontend deployed to Vercel" 
          echo "✅ Mobile app built successfully"

      - name: ❌ Failure Notification  
        if: needs.deploy-api.result == 'failure' || needs.deploy-frontend.result == 'failure'
        run: |
          echo "❌ Deployment failed!"
          echo "Please check the logs for details."